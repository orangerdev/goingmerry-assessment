import type { NextPage } from "next"
import Head from "next/head"
import { useEffect, useState } from "react"
import TimeComponent from "../components/Time"
import TimeDiffComponent from "../components/TimeDiff"
import { getTime } from "../helpers/time"
import styles from "../styles/Home.module.css"

const Home: NextPage<any> = (props) => {
  const { localTime } = props
  const utcTimeStamp = new Date(
    new Date(localTime.utc_datetime).toISOString()
  ).getTime()

  const timeZones = [
    { timezone: "Asia/Singapore", title: "Singapore" },
    { timezone: "Asia/Tokyo", title: "Tokyo" },
    { timezone: "Australia/Melbourne", title: "Melbourne" },
    { timezone: "America/New_York", title: "New York" },
  ]

  const [otherTimes, setOtherTimes] = useState<any>([])
  const [unixTimestamp, setUnixTimestamp] = useState(utcTimeStamp)

  const TikTokTikTok = () => {
    const time = setTimeout(() => {
      setUnixTimestamp((prevData) => prevData + 1000)
    }, 1000)
    return () => {
      clearTimeout(time)
    }
  }

  useEffect(() => {
    TikTokTikTok()
  }, [unixTimestamp])

  useEffect(() => {
    TikTokTikTok()
  }, [])

  useEffect(() => {
    const timeZonesTemp: string[] = []
    timeZones.map((timeZone) => {
      getTime(timeZone.timezone).then((data) => {
        timeZonesTemp.push(data)
      })

      setOtherTimes(timeZonesTemp)
    })
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <TimeComponent
          {...localTime}
          unixtime={unixTimestamp}
          title="Jakarta"
        />

        <div className="flex">
          {otherTimes.length > 0 &&
            otherTimes.map((otherTime: any, index: number) => {
              // console.log(otherTime)
              return (
                <TimeDiffComponent
                  key={`time-${index}`}
                  {...otherTime}
                  unixtime={unixTimestamp}
                />
              )
            })}
        </div>
      </main>
    </div>
  )
}

export const getServerSideProps = async () => {
  const localTime = await getTime("Asia/Jakarta")
  return {
    props: { localTime },
  }
}

export default Home
